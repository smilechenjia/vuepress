{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{279:function(e,t,a){\"use strict\";a.r(t);var s=a(38),n=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"说说react-native那些事儿\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#说说react-native那些事儿\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 说说react-native那些事儿\")]),e._v(\" \"),a(\"p\",[a(\"code\",[e._v(\"2019-9-29\")])]),e._v(\" \"),a(\"div\",{staticClass:\"tip custom-block\"},[a(\"p\",[e._v('react-native对我来说就是一个词 “new\"，现在就记录下这段时间对这块新大陆的探索之路吧')])]),e._v(\" \"),a(\"h2\",{attrs:{id:\"flexbox布局\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#flexbox布局\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" flexbox布局\")]),e._v(\" \"),a(\"p\",[e._v(\"在react-native中使用flexbox布局，以适用于不同屏幕尺寸。\")]),e._v(\" \"),a(\"p\",[e._v(\"在父元素标明flex是1，flexDirection表示主轴方向，justifyContent表示主轴对齐方式，alignItems表示次轴对齐方式\")]),e._v(\" \"),a(\"p\",[e._v(\"当justifyContent，alignItems的值都为center时，且父元素里只有一个子元素，则这个子元素居中\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"touchableopacity\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#touchableopacity\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" TouchableOpacity\")]),e._v(\" \"),a(\"p\",[e._v(\"TouchableOpacity特别好用，每次需要跳转的时候都可以用TouchableOpacity，它的onPress属性就是处理跳转参数的\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"<TouchableOpacity \\n   onPress={() => that.props.navigation.navigate('test', { id: id })}\\n>\\n</TouchableOpacity>\\n\")])])]),a(\"h2\",{attrs:{id:\"textinput\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#textinput\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" TextInput\")]),e._v(\" \"),a(\"p\",[e._v(\"把secureTextEntry属性设置为true即可显示密码\")]),e._v(\" \"),a(\"p\",[e._v(\"把autoCapitalize属性改为none则取消首字母大写\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"样式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#样式\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 样式\")]),e._v(\" \"),a(\"p\",[e._v(\"react-native里的样式都是驼峰式，样式总结有三种写法：\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[e._v(\"直接写在style属性里：\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"<Text style={{fontSize:14}}></Text> \\n\")])])]),a(\"ol\",{attrs:{start:\"2\"}},[a(\"li\",[e._v(\"创建stylesheet\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"<Text style={styles.textstyle}></Text>\\nconst styles = StyleSheet.create({\\n     textstyle: {\\n       color: '#000'\\n     }\\n})\\n\")])])]),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[e._v(\"混合\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"<View style={[styles.textstyle, {backgroundColor: 'red'}]}><View> \\n\")])])]),a(\"h2\",{attrs:{id:\"在react-native里添加表格\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#在react-native里添加表格\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 在react-native里添加表格\")]),e._v(\" \"),a(\"p\",[e._v(\"使用react-native-table-component\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[e._v(\"在package.json里添加，之后使用yarn install重新安装即可\")])]),e._v(\" \"),a(\"li\",[a(\"p\",[e._v(\"引入react-native-table-component\")])])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"import { Table, Row, Rows } from 'react-native-table-component';\\n\")])])]),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[e._v(\"使用如下：\")])]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"//表格使用的数据格式如下\\noptions: {\\n   tableHead: ['id', '姓名', '年龄'],        //表头\\n   tableData: [                            //表内容\\n      [1, '陈小', '23'],\\n      [2, '王王', '32'],\\n      [3, '刘大', '12']\\n   ]\\n}\\n\\n<Table borderStyle={{borderWidth: 1, borderColor: '#e8e8e8'}}>     //表格外框 \\n    <Row data={options.tableHead} />               //表头\\n    <Rows data={options.tableData} />             //表格内容\\n</Table>   \\n\")])])]),a(\"h2\",{attrs:{id:\"监听键盘事件，获得键盘高度\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#监听键盘事件，获得键盘高度\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 监听键盘事件，获得键盘高度\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"import Keyboard from 'react-native'        //引入keyboard\\n\\ncomponentWillMount() {      //添加监听事件，监听“键盘出现”，“键盘隐藏”\\n  this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow',this._keyboardDidShow.bind(this));\\n  this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide',this._keyboardDidHide.bind(this));\\n}\\n\\n_keyboardDidShow(e) {    //当监听到”键盘出现“时，调用这个函数，\\n  Platform.OS === 'ios' &&\\n    this.setState({\\n      keyBoardHeight: isIphoneX ? e.endCoordinates.height -34 : e.endCoordinates.height     \\n      //设置键盘高度，其中Platform用来判断当前环境是ios还是android\\n    });\\n}\\n\\n_keyboardDidHide() {       //当“键盘隐藏”时，设置键盘高度为0\\n  this.setState({\\n    keyBoardHeight: 0\\n  });\\n}\\n\\ncomponentWillUnmount(){   //组件销毁时事件也要移除\\n  this.keyboardDidShowListener.remove();\\n  this.keyboardDidHideListener.remove();\\n}\\n\")])])]),a(\"h2\",{attrs:{id:\"react-native传递信息给h5\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react-native传递信息给h5\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" react-native传递信息给h5\")]),e._v(\" \"),a(\"p\",[e._v(\"使用到了webview\")]),e._v(\" \"),a(\"p\",[e._v(\"webview里\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"<WebView\\n   ref={(webview) => {\\n     this.inweb = webview\\n   }}\\n   onLoadEnd={this.onLoadEnd}\\n   source={{uri: insideurl}}\\n/>\\n\\nonLoadEnd =(e)=>{\\n  let data = {\\n    name:'adddd'\\n  };\\n  this.inweb&&this.inweb.postMessage(JSON.stringify(data));   //发送消息到H5\\n};\\n\")])])]),a(\"p\",[e._v(\"h5里：\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"window.document.addEventListener('message', function(e) {        //注册事件 接收数据\\n   const message = e.data;      //e.data就是接收到的数据\\n})\\n\")])])]),a(\"h2\",{attrs:{id:\"获得当前滚动高度\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#获得当前滚动高度\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 获得当前滚动高度\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"<ScrollView   scrollEventThrottle = {10}   onScroll={this._changeScroll.bind(this)}>\\n</ScrollView>\\n\\n_changeScroll(e) {\\n  const scrollNow = e.nativeEvent.contentOffset.y;    //获得当前滚动高度\\n}\\n\")])])]),a(\"h2\",{attrs:{id:\"获取元素相对位置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#获取元素相对位置\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 获取元素相对位置\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"<View onLayout = {({nativeEvent: { layout: {x, y, width, height}}}) => {\\n     this._height = { y,height }\\n}>\\n\")])])]),a(\"h2\",{attrs:{id:\"使用navigation跳转页面不更新\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用navigation跳转页面不更新\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 使用navigation跳转页面不更新\")]),e._v(\" \"),a(\"p\",[e._v(\"使用到DeviceEventEmitter\")]),e._v(\" \"),a(\"p\",[e._v(\"如果A跳转到B\")]),e._v(\" \"),a(\"p\",[e._v(\"A:要跳转的时候触发一个事件\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"import DeviceEventEmitter from ‘react-native'\\nDeviceEventEmitter.emit('UPDATE',9999);\\n\")])])]),a(\"p\",[e._v(\"B:在componentdidmount里监听这个事件，然后强制刷新，重新调接口\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"componentDidComponent(){\\n  this.subscription = DeviceEventEmitter.addListener('UPDATE',\\n    (param)=>{\\n       this.forceUpdate();    //强制刷新页面\\n       this.getClue()           //重新获取接口\\n    })\\n}\\n\\ncomponentWillUnmount() {     //在组件销毁时移除这个事件\\n  this.subscription.remove();\\n};\\n\")])])]),a(\"h2\",{attrs:{id:\"下拉刷新\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#下拉刷新\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 下拉刷新\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\" <ScrollView \\n   refreshControl={\\n     <RefreshControl\\n       refreshing={this.state.refreshing}\\n       onRefresh={this._onRefresh}\\n     />\\n   }\\n>\\n</ScrollView>\\n\\n_onRefresh = () => {\\n  this.setState({refreshing: true});\\n  重新获取接口\\n  this.setState({refreshing: false});\\n}\\n\")])])]),a(\"h2\",{attrs:{id:\"把内容套在一个边框图片里\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#把内容套在一个边框图片里\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 把内容套在一个边框图片里\")]),e._v(\" \"),a(\"p\",[e._v(\"先写图片，再写被套的内容，保证图片和被套的内容高宽一致，且被套内容最外边的position是absolute\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"<Image source={shadow} style={{width: 100,height: 100}} resizeMode='stretch'></Image>\\n<View style={{position:'absolute',width:100,height:100}}>\\n</View>\\n\")])])]),a(\"h2\",{attrs:{id:\"如何在google里调试ios模拟器\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如何在google里调试ios模拟器\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 如何在google里调试iOS模拟器\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[e._v(\"运行模拟器：react-native run-ios\")])]),e._v(\" \"),a(\"li\",[a(\"p\",[e._v(\"command+d => Debug JS Remotely 此时会启动google\")])]),e._v(\" \"),a(\"li\",[a(\"p\",[e._v(\"在chrome里选择视图->开发者->开发者工具\")])])])])},[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}